varnishtest "via and authority"

shell "getent hosts localhost www.localhost img.localhost || true"

server s1 -repeat 5 {
	rxreq
	txresp
} -start

varnish v2 -proto PROXY -vcl {
	import ${vmod_dynamic};
	import std;
	import proxy;

	backend dummy { .host = "${bad_backend}"; }

	sub vcl_init {
		new d1 = dynamic.director();
	}

	sub vcl_recv {
		set req.backend_hint = d1.backend(server.ip,
		    std.port(server.ip));
		set req.http.Authority = proxy.authority();

		return (pass);
	}

	sub vcl_deliver {
		set resp.http.Authority = req.http.Authority;
	}
} -start

varnish v1 -vcl {
	import ${vmod_dynamic};

	backend v2 { .host = "${v2_addr}"; .port = "${v2_port}"; }

	sub vcl_init {
		new d1 = dynamic.director(
		    port = "${s1_port}",
		    via = v2);
	}

	sub vcl_recv {
		set req.backend_hint = d1.backend("localhost");
	}

	sub vcl_backend_error {
		# the director may resolve ::1 first
		return (retry);
	}
} -start

client c1 {
	txreq
	rxresp
	expect resp.status == 200
	expect resp.http.Authority == "localhost"
} -run

varnish v1 -vcl {
	import ${vmod_dynamic};

	backend v2 { .host = "${v2_addr}"; .port = "${v2_port}"; }

	sub vcl_init {
		new d1 = dynamic.director(
		    port = "${s1_port}",
		    via = v2,
		    authority = "authority.com");
	}

	sub vcl_recv {
		set req.backend_hint = d1.backend("localhost");
	}

	sub vcl_backend_error {
		# the director may resolve ::1 first
		return (retry);
	}
}

client c1 {
	txreq -url /foo
	rxresp
	expect resp.status == 200
	expect resp.http.Authority == "authority.com"
} -run

varnish v1 -vcl {
	import ${vmod_dynamic};

	backend v2 { .host = "${v2_addr}"; .port = "${v2_port}"; }

	sub vcl_init {
		new d1 = dynamic.director(
		    port = "${s1_port}",
		    via = v2,
		    host_header = "host.com");
	}

	sub vcl_recv {
		set req.backend_hint = d1.backend("localhost");
	}

	sub vcl_backend_error {
		# the director may resolve ::1 first
		return (retry);
	}
}

client c1 {
	txreq -url /bar
	rxresp
	expect resp.status == 200
	expect resp.http.Authority == "host.com"
} -run

varnish v1 -vcl {
	import ${vmod_dynamic};

	backend v2 { .host = "${v2_addr}"; .port = "${v2_port}"; }

	sub vcl_init {
		new d1 = dynamic.director(
		    port = "${s1_port}",
		    via = v2,
		    authority = "");
	}

	sub vcl_recv {
		set req.backend_hint = d1.backend("localhost");
	}

	sub vcl_backend_error {
		# the director may resolve ::1 first
		return (retry);
	}
}

client c1 {
	txreq -url /baz
	rxresp
	expect resp.status == 200
	expect resp.http.Authority == ""
} -run

varnish v3 -proto PROXY -vcl+backend {
	import std;
	import proxy;

	sub vcl_recv {
		set req.http.Authority = proxy.authority();
	}

	sub vcl_deliver {
		set resp.http.Authority = req.http.Authority;
	}
} -start

varnish v1 -vcl {
	import ${vmod_dynamic};

	backend b None;

	sub vcl_init {
		new d1 = dynamic.director(
		    port = "${v3_port}",
		    proxy_header = 2,
		    authority = "authority.com");
	}

	sub vcl_recv {
		set req.backend_hint = d1.backend("${v3_addr}");
	}

	sub vcl_backend_error {
		# the director may resolve ::1 first
		return (retry);
	}
}

client c1 -connect ${v1_sock} {
	txreq -url /quux
	rxresp
	expect resp.status == 200
	expect resp.http.Authority == ""
} -run

# vtc diag only
shell "varnishstat -1 -n ${v1_name} -f VBE.*"

varnish v1 -expect VBE.vcl1.d1.localhost(${s1_addr}:${s1_port}).req == 1
varnish v1 -expect LCK.dynamic.director.creat > 0
varnish v1 -expect LCK.dynamic.backend.creat > 0
